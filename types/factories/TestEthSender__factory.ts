/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TestEthSender } from "../TestEthSender";

export class TestEthSender__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestEthSender> {
    return super.deploy(overrides || {}) as Promise<TestEthSender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestEthSender {
    return super.attach(address) as TestEthSender;
  }
  connect(signer: Signer): TestEthSender__factory {
    return super.connect(signer) as TestEthSender__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestEthSender {
    return new Contract(address, _abi, signerOrProvider) as TestEthSender;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "sendEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060b48061001f6000396000f3fe608060405260043610601c5760003560e01c806376a54c60146021575b600080fd5b604460048036036020811015603557600080fd5b50356001600160a01b03166046565b005b6040516001600160a01b038216903480156108fc02916000818181858888f19350505050158015607a573d6000803e3d6000fd5b505056fea264697066735822122093fdd4d4e42e9526d6074dacc0e7fb2e29ae9ee91c67876ac40c8bf1dd5a569064736f6c63430007010033";
