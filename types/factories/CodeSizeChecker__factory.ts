/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { CodeSizeChecker } from "../CodeSizeChecker";

export class CodeSizeChecker__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CodeSizeChecker> {
    return super.deploy(overrides || {}) as Promise<CodeSizeChecker>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CodeSizeChecker {
    return super.attach(address) as CodeSizeChecker;
  }
  connect(signer: Signer): CodeSizeChecker__factory {
    return super.connect(signer) as CodeSizeChecker__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CodeSizeChecker {
    return new Contract(address, _abi, signerOrProvider) as CodeSizeChecker;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "which",
        type: "address",
      },
    ],
    name: "codeSize",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50609c8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806352872cf314602d575b600080fd5b605060048036036020811015604157600080fd5b50356001600160a01b03166062565b60408051918252519081900360200190f35b3b9056fea264697066735822122059d02cfff6d74449e8b89a43f54a2591e2f869acd28319130398baf8f70da83364736f6c63430007010033";
